* MawsonLakes.Org SkyWater Shuttle

This repository contains the files and documentation for production of an ASIC
via the Google and Skywater shuttle program.

Site: https://github.com/google/skywater-pdk

The specific design and purpose for this ASIC is still a work in progress. 

** Tools / Installation

These files were created using software installed on Ubuntu (most recent -
20.04.1).

Most of these tools are hosted by 'efabless'. For more information, see:
http://opencircuitdesign.com

*** Open PDKS (part 1)

The Open-PDKs project aims to collect the technology data for open and freely
available Process Development Kits for ASIC development.

It contains the technology and configuration files required to design an ASICS
for a particular fabrication process.

Download with:
#+begin_src sh
  git clone git://opencircuitdesign.com/open_pdks
#+end_src

Documentation on how to proceed installing the Skywater SDK, as well as how to
configure the various tools, can be found in the document: open_pdks/sky130/README

*** Skywater SDK

This repository contans the foundry source files for the Skywater sky130 130nm process.

Download with
#+begin_src sh
  git clone https://github.com/google/skywater-pdk
#+end_src

Installation details can be found in the open_pdks/sky130/README document, but
the process is:
#+begin_src sh
  cd skywater-pdk
  git submodule init libraries/sky130_fd_sc_hd/latest
  git submodule init libraries/sky130_fd_sc_hdll/latest
  git submodule init libraries/sky130_fd_sc_hs/latest
  git submodule init libraries/sky130_fd_sc_ms/latest
  git submodule init libraries/sky130_fd_sc_ls/latest
  git submodule init libraries/sky130_fd_sc_lp/latest
  git submodule init libraries/sky130_fd_sc_hvl/latest
  git submodule update

  make timing
#+end_src

The Skywater PDK uses the Conda Package Management Software to manage it's
environment and software dependencies.

Configuration
#+begin_src sh
  ./configure \
      --with-sky130-source=$BASEDIR/skywater-pdk \
      --with-sky130-local-path=$BASEDIR/pdks
#+end_src

*** Magic VLSI

Magic allows VLSI designs to be drawn by hand and exported to GDS format. It
does a lot more though, and can be used to check designs created by other means
against design rule constraints (DRC)

Magic version 8.3 appears to be required. The version packaged for Ubuntu is
version 8.2.157 and gives errors during the install, so DON'T do the following
for now:
#+begin_src sh
  sudo apt install magic
#+end_src

Instead, download and install Magic from source:
#+begin_src sh
  # Dependancies (there may be more)
  sudo apt install csh
  sudo apt install tcl-dev tk-dev
  
  git clone https://github.com/RTimothyEdwards/magic.git
  cd magic
  ./configure
  make
  sudo make install
#+end_src
This install the binary, and files:
#+begin_src
  /usr/local/bin/magic  (binary)
  /usr/local/bin/magic/ (lots of stuff, including tutorial files)
#+end_src

Magic is installed, but it still needs to be configured to use the Sky150
process and design rules. This is done in the next step.

*** Open PDKS (Part 2)
Continue to follow the instructions in: open_pdks/sky130/README

At the top level:
#+begin_src sh
  BASEDIR='/put/the/base/directory/of/your/working/files/here'
  ./configure \
    --with-sky130-source=$BASEDIR/skywater-sdk \
    --with-sky130-local-path=$BASEDIR/pdks

  cd sky130
  make
  make local-install
#+end_src
This will install the SDK files into
#+begin_src sh
  $BASEDIR/pdks/sky130A
#+end_src

Configure the startup script for magic.
#+begin_src sh
  ln -s $BASEDIR/pdks/sky130A/libs.tech/magic/sky130A.magicrc ~/.magicrc
#+end_src

Magic can then be able to be started with:
#+begin_src sh
  magic
#+end_src

When starting up, look for the following line in the console (about 10 lines
down), which indicated that the Magic configuration file from Open_PDKs has been
read correctly for the Sky130 PDK.
#+begin_src 
  Sourcing design .magicrc for technology sky130A ...
#+end_src

*** Electric

Electric is similar to Magic. Originally written in 'C' it has been ported to
Java and is available on other operating systems.

It also provides a 3D visualization option.

To install
#+begin_src sh
  sudo apt install electric
#+end_src

*** klayout

VLSI Layout software written in KDE

To install
#+begin_src sh
  sudo apt install klayout
#+end_src

*** GDS2WebGL

Tool to produce a a visualisation of VLSI design in a 3D layout, viewable in a
web browser.

Available here: https://github.com/s-holst/GDS2WebGL
#+begin_src sh
  # In parent directory
  git clone https://github.com/s-holst/GDS2WebGL
  pip3 install gdspy
  pip3 install pyclipper
  pip3 install mapbox_earcut

  cd mawsonlakes-skywater-shuttle/doc
  cp ../../GDS2WebGL/index.html .
  cp ../../GDS2WebGL/bundle.js .
  python3 ../../GDS2WebGL/gds2webgl.py -i ../gds/open-source-hardware.gds -o open-source-hardware.html
#+end_src

Then open a browser to 'open-source-hardware.html'
#+begin_src sh
  chromium-browser open-source-hardware.html
#+end_src

** Targets and Building
   
The Makefile has been configured with the following targets:
#+begin_src sh
  make TARGET
#+end_src
| TARGET | Description                          |
|--------+--------------------------------------|
| doc    | Produces HTML documentation in 'doc' |

** Examples
*** Editing gds with Magic
#+begin_src sh
  magic -T ../open_pdks/sky130/magic/sky130gds.tech gds/mawson-lakes-org.gds
#+end_src

or, to load the sky130 technology file separately, at the prompt in the magic
console, use:
#+begin_src tcl 
  tech load ../open_pdks/sky130/magic/sky130gds.tech
#+end_src

In this example, we are creating and editing a feature in the 'metal 1' layer.
Details of the constraints can be found in the documentation:
https://skywater-pdk.readthedocs.io/en/latest/rules/assumptions.html#minimum-critical-dimensions
 
From the documentation, for the 'metal 1' layer
| Parameter    | Size       | Comment                         |
|--------------+------------+---------------------------------|
| Feature Size | 0.14 um    |                                 |
| Space Size   | 0.14 um    | Space between features          |
| Minimum Area | 0.083 um^2 | Equivalent to 0.28 um x 0.28 um |

If these parameters are not satisfied, Magic will flag it as an error.
